#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative 'Ast.rb'
require_relative 'Lexer.rb'
require_relative 'SegregateTks'

class SyntacticError < RuntimeError
	def initialize(tk)
		@token = tk
	end

	def to_s
		tk.unexpected
	end
end

class Parser < Racc::Parser

module_eval(<<'...end Parser.y/module_eval...', 'Parser.y', 235)
	def on_error(id, token, stack)
	  puts "Error SintÃ¡ctico"
      puts token.unexpected
    end

	def next_token
		token = @catch.shift
		return [false, false] unless token
		return [token.class, token]
	end

	def parse(lexerCatch)
		@yydebug = true
		@catch = lexerCatch
		ast = do_parse
		return ast
	end
...end Parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     9,   197,    31,    32,   139,    17,    18,    19,    20,   167,
   127,    21,    22,   150,   151,   216,    23,    70,    17,    18,
    19,   152,    69,   164,   153,   154,   217,   134,     9,   155,
    95,   140,   149,    17,    18,    19,    20,   128,   135,    21,
    22,   162,   150,   151,    23,   177,    16,    17,    18,    19,
   152,    76,    77,   153,   154,    31,    32,     3,   155,   143,
   173,   149,    31,    32,   150,   151,    73,    74,    75,    17,
    18,    19,   152,   160,    16,   153,   154,     6,   179,   169,
   155,    38,    76,   149,   150,   151,    31,    32,   143,    17,
    18,    19,   152,    99,   100,   153,   154,    73,    74,    75,
   155,   150,   151,   149,    31,    32,    17,    18,    19,   152,
   143,   158,   153,   154,    31,    32,    30,   155,    31,    32,
   149,   150,   151,    37,   181,    38,    17,    18,    19,   152,
   143,   157,   153,   154,    73,    74,    75,   155,   150,   151,
   149,    73,    74,    17,    18,    19,   152,   143,   184,   153,
   154,   185,   186,     9,   155,   138,   136,   149,    17,    18,
    19,    20,   189,    73,    21,    22,   191,   143,   131,    23,
   150,   151,   130,   194,   129,    17,    18,    19,   152,   126,
   170,   153,   154,   125,   143,   102,   155,   200,    98,   149,
   150,   151,    93,    91,   204,    17,    18,    19,   152,    16,
   205,   153,   154,    38,    68,    63,   155,     9,    60,   149,
   210,   211,    17,    18,    19,    20,   143,    59,    21,    22,
   213,   150,   151,    23,   214,   215,    17,    18,    19,   152,
    58,   218,   153,   154,    55,   220,   143,   155,     9,   221,
   149,   222,    39,    17,    18,    19,    20,   224,   225,    21,
    22,   226,    36,    16,    23,   228,    28,   150,   151,   230,
   231,   232,    17,    18,    19,   152,    27,   143,   153,   154,
   235,   236,    26,   155,     9,     6,   149,   239,    24,    17,
    18,    19,    20,   241,    16,    21,    22,     7,     9,   243,
    23,   244,   nil,    17,    18,    19,    20,   nil,   nil,    21,
    22,     9,   nil,   143,    23,   nil,    17,    18,    19,    20,
   nil,   nil,    21,    22,   nil,   nil,     9,    23,   nil,   nil,
    16,    17,    18,    19,    20,   nil,   nil,    21,    22,   nil,
   150,   151,    23,   nil,    16,    17,    18,    19,   152,   nil,
   nil,   153,   154,   nil,   nil,   nil,   155,    16,   nil,   149,
   nil,   nil,   150,   151,   nil,   nil,   nil,    17,    18,    19,
   152,   nil,    16,   153,   154,   nil,   nil,   nil,   155,   nil,
   nil,   149,   150,   151,   nil,   nil,   143,    17,    18,    19,
   152,   nil,   nil,   153,   154,   nil,   nil,   nil,   155,     9,
   nil,   149,   nil,   nil,    17,    18,    19,    20,   143,   nil,
    21,    22,   nil,     9,   212,    23,   nil,   nil,    17,    18,
    19,    20,   nil,   nil,    21,    22,   nil,   nil,   143,    23,
   nil,   nil,   nil,    76,    77,   nil,   nil,   nil,    78,    79,
   nil,   nil,   nil,   182,   nil,    16,    71,    72,    73,    74,
    75,    80,    83,    81,    82,    84,    85,   183,   nil,    16,
   nil,   nil,    76,    77,   nil,   nil,   nil,    78,    79,   193,
   nil,   nil,   nil,   nil,   nil,    71,    72,    73,    74,    75,
    80,    83,    81,    82,    84,    85,   nil,   nil,    76,    77,
   nil,   nil,   nil,    78,    79,   nil,   nil,   nil,   233,   nil,
   nil,    71,    72,    73,    74,    75,    80,    83,    81,    82,
    84,    85,   234,   nil,   nil,   nil,   nil,    76,    77,   nil,
   nil,   nil,    78,    79,   240,   nil,   nil,   nil,   nil,   nil,
    71,    72,    73,    74,    75,    80,    83,    81,    82,    84,
    85,   nil,   nil,    76,    77,   nil,   nil,   nil,    78,    79,
    90,   nil,   nil,   nil,   nil,   nil,    71,    72,    73,    74,
    75,    80,    83,    81,    82,    84,    85,   nil,   nil,    76,
    77,   nil,   nil,   nil,    78,    79,   nil,   nil,   nil,   nil,
   nil,   nil,    71,    72,    73,    74,    75,    80,    83,    81,
    82,    84,    85,    89,   nil,   nil,   nil,   nil,    76,    77,
   nil,   nil,   nil,   nil,    76,    77,   nil,   nil,   nil,    78,
    79,    71,    72,    73,    74,    75,    80,    71,    72,    73,
    74,    75,    80,    83,    81,    82,    84,    85,   192,   nil,
   nil,   nil,   nil,    76,    77,   nil,   nil,   nil,   nil,    76,
    77,   nil,   nil,   nil,    78,    79,    71,   nil,    73,    74,
    75,   nil,    71,    72,    73,    74,    75,    80,    83,    81,
    82,    84,    85,   219,    76,    77,   nil,   nil,   nil,    76,
    77,   nil,   nil,   nil,    78,    79,   nil,    71,    72,    73,
    74,    75,    71,    72,    73,    74,    75,    80,    83,    81,
    82,    84,    85,   137,   nil,   nil,   nil,   nil,   nil,    76,
    77,   nil,   nil,   nil,    78,    79,   nil,   nil,   nil,   nil,
   nil,   nil,    71,    72,    73,    74,    75,    80,    83,    81,
    82,    84,    85,   195,   nil,   nil,    76,    77,   nil,   nil,
   nil,    78,    79,   nil,   nil,   nil,   nil,   nil,   nil,    71,
    72,    73,    74,    75,    80,    83,    81,    82,    84,    85,
    92,   nil,   nil,    76,    77,   nil,   nil,   nil,    78,    79,
   nil,   nil,   nil,   nil,   nil,   nil,    71,    72,    73,    74,
    75,    80,    83,    81,    82,    84,    85,    47,    48,    50,
    47,    48,    50,   nil,   nil,    51,   nil,   nil,    51,    49,
   nil,   nil,    49,   nil,   nil,   nil,   nil,   nil,    47,    48,
    50,    41,    46,   nil,    41,    46,    51,    65,   nil,   nil,
    49,   nil,    47,    48,    50,   nil,   nil,    47,    48,    50,
    51,   nil,    41,    46,    49,    51,    47,    48,    50,    49,
   nil,    47,    48,    50,    51,   nil,    41,    46,    49,    51,
   nil,    41,    46,    49,   nil,    47,    48,    50,   nil,   nil,
    41,    46,   nil,    51,   nil,    41,    46,    49,   nil,    47,
    48,    50,   nil,   nil,    47,    48,    50,    51,    44,    41,
    46,    49,    51,    47,    48,    50,    49,   nil,    47,    48,
    50,    51,   nil,    41,    46,    49,    51,   nil,    41,    46,
    49,   nil,    47,    48,    50,   nil,   nil,    41,    46,   nil,
    51,   nil,    41,    46,    49,   nil,    47,    48,    50,   nil,
   nil,    47,    48,    50,    51,   nil,    41,    46,    49,    51,
    47,    48,    50,    49,   nil,    47,    48,    50,    51,   nil,
    41,    46,    49,    51,   nil,    41,    46,    49,   nil,    47,
    48,    50,   nil,   nil,    41,    46,   nil,    51,   nil,    41,
    46,    49,   nil,    47,    48,    50,   nil,   nil,    47,    48,
    50,    51,   nil,    41,    46,    49,    51,    47,    48,    50,
    49,   nil,    47,    48,    50,    51,   nil,    41,    46,    49,
    51,   nil,    41,    46,    49,   nil,    47,    48,    50,   nil,
   nil,    41,    46,   nil,    51,   nil,    41,    46,    49,   nil,
    47,    48,    50,   nil,   nil,    47,    48,    50,    51,   nil,
    41,    46,    49,    51,    47,    48,    50,    49,   nil,    47,
    48,    50,    51,   nil,    41,    46,    49,    51,   nil,    41,
    46,    49,   nil,    47,    48,    50,   nil,   nil,    41,    46,
   nil,    51,   nil,    41,    46,    49,   nil,    47,    48,    50,
   nil,   nil,    47,    48,    50,    51,   nil,    41,    46,    49,
    51,    47,    48,    50,    49,   nil,    47,    48,    50,    51,
    44,    41,    46,    49,    51,    44,    41,    46,    49,   nil,
    47,    48,    50,   nil,   nil,    41,    46,   nil,    51,   nil,
    41,    46,    49,   nil,    47,    48,    50,   nil,   nil,    47,
    48,    50,    51,   nil,    41,    46,    49,    51,    47,    48,
    50,    49,   nil,    47,    48,    50,    51,   nil,    41,    46,
    49,    51,   nil,    41,    46,    49,   nil,    47,    48,    50,
   nil,   nil,    41,    46,   nil,    51,   nil,    41,    46,    49,
   nil,    47,    48,    50,   nil,   nil,   nil,   nil,   nil,    51,
   nil,    41,    46,    49,   nil,    76,    77,   nil,   nil,   nil,
    78,    79,   nil,   nil,   nil,    41,    46,   103,    71,    72,
    73,    74,    75,    80,    83,    81,    82,    84,    85,    76,
    77,   nil,   nil,   nil,    78,    79,   nil,   nil,   nil,   nil,
   nil,   nil,    71,    72,    73,    74,    75,    80,    83,    81,
    82,    84,    85,    76,    77,   nil,   nil,   nil,    78,    79,
   202,   nil,   nil,   nil,    76,    77,    71,    72,    73,    74,
    75,    80,    83,    81,    82,    84,    85,    71,    72,    73,
    74,    75,    80,    83,    81,    82,    84,    85,    76,    77,
   nil,   nil,   nil,    78,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    71,    72,    73,    74,    75,    80,    83,    81,    82,
    84,    85,    76,    77,   nil,   nil,   nil,    78,    79,   159,
   nil,   nil,   nil,   nil,   nil,    71,    72,    73,    74,    75,
    80,    83,    81,    82,    84,    85,    76,    77,   nil,   nil,
   nil,    78,    79,   188,   nil,   nil,   nil,   nil,   nil,    71,
    72,    73,    74,    75,    80,    83,    81,    82,    84,    85,
    76,    77,   nil,   nil,   nil,    78,    79,   nil,   nil,   nil,
   nil,   120,   nil,    71,    72,    73,    74,    75,    80,    83,
    81,    82,    84,    85,    76,    77,   nil,   nil,   nil,    78,
    79,   101,   nil,   nil,   nil,    76,    77,    71,    72,    73,
    74,    75,    80,    83,    81,    82,    84,    85,    71,    72,
    73,    74,    75,    80,    83,    81,    82,    84,    76,    77,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    76,    77,   nil,
   nil,    71,    72,    73,    74,    75,    80,    83,    81,    82,
    71,    72,    73,    74,    75,    80,    83,    81,    76,    77,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    71,    72,    73,    74,    75,    80,    83 ]

racc_action_check = [
    24,   181,    58,    58,   126,    24,    24,    24,    24,   141,
    95,    24,    24,   240,   240,   206,    24,    42,   240,   240,
   240,   240,    42,   138,   240,   240,   206,   121,     3,   240,
    58,   126,   240,     3,     3,     3,     3,    95,   121,     3,
     3,   136,   192,   192,     3,   154,    24,   192,   192,   192,
   192,   105,   105,   192,   192,   140,   140,     0,   192,   240,
   150,   192,   150,   150,   189,   189,   105,   105,   105,   189,
   189,   189,   189,   134,     3,   189,   189,     0,   156,   143,
   189,   143,   111,   189,   233,   233,    33,    33,   192,   233,
   233,   233,   233,    63,    63,   233,   233,   111,   111,   111,
   233,   193,   193,   233,   157,   157,   193,   193,   193,   193,
   189,   130,   193,   193,   128,   128,     9,   193,     9,     9,
   193,   185,   185,    16,   161,    16,   185,   185,   185,   185,
   233,   129,   185,   185,   110,   110,   110,   185,   142,   142,
   185,   109,   109,   142,   142,   142,   142,   193,   165,   142,
   142,   166,   167,    10,   142,   124,   122,   142,    10,    10,
    10,    10,   172,   108,    10,    10,   174,   185,    98,    10,
   217,   217,    97,   177,    96,   217,   217,   217,   217,    94,
   148,   217,   217,    93,   142,    66,   217,   184,    61,   217,
   151,   151,    57,    55,   190,   151,   151,   151,   151,    10,
   191,   151,   151,    41,    39,    34,   151,   212,    29,   151,
   196,   198,   212,   212,   212,   212,   217,    28,   212,   212,
   201,   179,   179,   212,   203,   204,   179,   179,   179,   179,
    26,   207,   179,   179,    22,   209,   151,   179,   182,   210,
   179,   211,    17,   182,   182,   182,   182,   213,   214,   182,
   182,   216,    15,   212,   182,   218,     8,   173,   173,   220,
   223,   227,   173,   173,   173,   173,     7,   179,   173,   173,
   231,   232,     6,   173,    90,     5,   173,   237,     4,    90,
    90,    90,    90,   239,   182,    90,    90,     1,    60,   242,
    90,   243,   nil,    60,    60,    60,    60,   nil,   nil,    60,
    60,    89,   nil,   173,    60,   nil,    89,    89,    89,    89,
   nil,   nil,    89,    89,   nil,   nil,   135,    89,   nil,   nil,
    90,   135,   135,   135,   135,   nil,   nil,   135,   135,   nil,
   139,   139,   135,   nil,    60,   139,   139,   139,   139,   nil,
   nil,   139,   139,   nil,   nil,   nil,   139,    89,   nil,   139,
   nil,   nil,   127,   127,   nil,   nil,   nil,   127,   127,   127,
   127,   nil,   135,   127,   127,   nil,   nil,   nil,   127,   nil,
   nil,   127,   195,   195,   nil,   nil,   139,   195,   195,   195,
   195,   nil,   nil,   195,   195,   nil,   nil,   nil,   195,    30,
   nil,   195,   nil,   nil,    30,    30,    30,    30,   127,   nil,
    30,    30,   nil,    92,   199,    30,   nil,   nil,    92,    92,
    92,    92,   nil,   nil,    92,    92,   nil,   nil,   195,    92,
   nil,   nil,   nil,   199,   199,   nil,   nil,   nil,   199,   199,
   nil,   nil,   nil,   163,   nil,    30,   199,   199,   199,   199,
   199,   199,   199,   199,   199,   199,   199,   163,   nil,    92,
   nil,   nil,   163,   163,   nil,   nil,   nil,   163,   163,   176,
   nil,   nil,   nil,   nil,   nil,   163,   163,   163,   163,   163,
   163,   163,   163,   163,   163,   163,   nil,   nil,   176,   176,
   nil,   nil,   nil,   176,   176,   nil,   nil,   nil,   229,   nil,
   nil,   176,   176,   176,   176,   176,   176,   176,   176,   176,
   176,   176,   229,   nil,   nil,   nil,   nil,   229,   229,   nil,
   nil,   nil,   229,   229,   238,   nil,   nil,   nil,   nil,   nil,
   229,   229,   229,   229,   229,   229,   229,   229,   229,   229,
   229,   nil,   nil,   238,   238,   nil,   nil,   nil,   238,   238,
    54,   nil,   nil,   nil,   nil,   nil,   238,   238,   238,   238,
   238,   238,   238,   238,   238,   238,   238,   nil,   nil,    54,
    54,   nil,   nil,   nil,    54,    54,   nil,   nil,   nil,   nil,
   nil,   nil,    54,    54,    54,    54,    54,    54,    54,    54,
    54,    54,    54,    53,   nil,   nil,   nil,   nil,   117,   117,
   nil,   nil,   nil,   nil,    53,    53,   nil,   nil,   nil,    53,
    53,   117,   117,   117,   117,   117,   117,    53,    53,    53,
    53,    53,    53,    53,    53,    53,    53,    53,   175,   nil,
   nil,   nil,   nil,   106,   106,   nil,   nil,   nil,   nil,   175,
   175,   nil,   nil,   nil,   175,   175,   106,   nil,   106,   106,
   106,   nil,   175,   175,   175,   175,   175,   175,   175,   175,
   175,   175,   175,   208,   114,   114,   nil,   nil,   nil,   208,
   208,   nil,   nil,   nil,   208,   208,   nil,   114,   114,   114,
   114,   114,   208,   208,   208,   208,   208,   208,   208,   208,
   208,   208,   208,   123,   nil,   nil,   nil,   nil,   nil,   123,
   123,   nil,   nil,   nil,   123,   123,   nil,   nil,   nil,   nil,
   nil,   nil,   123,   123,   123,   123,   123,   123,   123,   123,
   123,   123,   123,   178,   nil,   nil,   178,   178,   nil,   nil,
   nil,   178,   178,   nil,   nil,   nil,   nil,   nil,   nil,   178,
   178,   178,   178,   178,   178,   178,   178,   178,   178,   178,
    56,   nil,   nil,    56,    56,   nil,   nil,   nil,    56,    56,
   nil,   nil,   nil,   nil,   nil,   nil,    56,    56,    56,    56,
    56,    56,    56,    56,    56,    56,    56,   152,   152,   152,
   137,   137,   137,   nil,   nil,   152,   nil,   nil,   137,   152,
   nil,   nil,   137,   nil,   nil,   nil,   nil,   nil,    38,    38,
    38,   152,   152,   nil,   137,   137,    38,    38,   nil,   nil,
    38,   nil,   155,   155,   155,   nil,   nil,    37,    37,    37,
   155,   nil,    38,    38,   155,    37,   183,   183,   183,    37,
   nil,   194,   194,   194,   183,   nil,   155,   155,   183,   194,
   nil,    37,    37,   194,   nil,    69,    69,    69,   nil,   nil,
   183,   183,   nil,    69,   nil,   194,   194,    69,   nil,    71,
    71,    71,   nil,   nil,    72,    72,    72,    71,    69,    69,
    69,    71,    72,    73,    73,    73,    72,   nil,    74,    74,
    74,    73,   nil,    71,    71,    73,    74,   nil,    72,    72,
    74,   nil,    75,    75,    75,   nil,   nil,    73,    73,   nil,
    75,   nil,    74,    74,    75,   nil,    76,    76,    76,   nil,
   nil,    77,    77,    77,    76,   nil,    75,    75,    76,    77,
    78,    78,    78,    77,   nil,   153,   153,   153,    78,   nil,
    76,    76,    78,   153,   nil,    77,    77,   153,   nil,    80,
    80,    80,   nil,   nil,    78,    78,   nil,    80,   nil,   153,
   153,    80,   nil,    81,    81,    81,   nil,   nil,    82,    82,
    82,    81,   nil,    80,    80,    81,    82,    83,    83,    83,
    82,   nil,    84,    84,    84,    83,   nil,    81,    81,    83,
    84,   nil,    82,    82,    84,   nil,    85,    85,    85,   nil,
   nil,    83,    83,   nil,    85,   nil,    84,    84,    85,   nil,
    51,    51,    51,   nil,   nil,    23,    23,    23,    51,   nil,
    85,    85,    51,    23,    21,    21,    21,    23,   nil,    91,
    91,    91,    21,   nil,    51,    51,    21,    91,   nil,    23,
    23,    91,   nil,    20,    20,    20,   nil,   nil,    21,    21,
   nil,    20,   nil,    91,    91,    20,   nil,    19,    19,    19,
   nil,   nil,    18,    18,    18,    19,   nil,    20,    20,    19,
    18,    49,    49,    49,    18,   nil,    50,    50,    50,    49,
    19,    19,    19,    49,    50,    18,    18,    18,    50,   nil,
   219,   219,   219,   nil,   nil,    49,    49,   nil,   219,   nil,
    50,    50,   219,   nil,   234,   234,   234,   nil,   nil,   100,
   100,   100,   234,   nil,   219,   219,   234,   100,   103,   103,
   103,   100,   nil,   169,   169,   169,   103,   nil,   234,   234,
   103,   169,   nil,   100,   100,   169,   nil,   149,   149,   149,
   nil,   nil,   103,   103,   nil,   149,   nil,   169,   169,   149,
   nil,    79,    79,    79,   nil,   nil,   nil,   nil,   nil,    79,
   nil,   149,   149,    79,   nil,    67,    67,   nil,   nil,   nil,
    67,    67,   nil,   nil,   nil,    79,    79,    67,    67,    67,
    67,    67,    67,    67,    67,    67,    67,    67,    67,    43,
    43,   nil,   nil,   nil,    43,    43,   nil,   nil,   nil,   nil,
   nil,   nil,    43,    43,    43,    43,    43,    43,    43,    43,
    43,    43,    43,   187,   187,   nil,   nil,   nil,   187,   187,
   187,   nil,   nil,   nil,   112,   112,   187,   187,   187,   187,
   187,   187,   187,   187,   187,   187,   187,   112,   112,   112,
   112,   112,   112,   112,   112,   112,   112,   112,   113,   113,
   nil,   nil,   nil,   113,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   113,   113,   113,   113,   113,   113,   113,   113,   113,
   113,   113,   132,   132,   nil,   nil,   nil,   132,   132,   132,
   nil,   nil,   nil,   nil,   nil,   132,   132,   132,   132,   132,
   132,   132,   132,   132,   132,   132,   171,   171,   nil,   nil,
   nil,   171,   171,   171,   nil,   nil,   nil,   nil,   nil,   171,
   171,   171,   171,   171,   171,   171,   171,   171,   171,   171,
    88,    88,   nil,   nil,   nil,    88,    88,   nil,   nil,   nil,
   nil,    88,   nil,    88,    88,    88,    88,    88,    88,    88,
    88,    88,    88,    88,    64,    64,   nil,   nil,   nil,    64,
    64,    64,   nil,   nil,   nil,   119,   119,    64,    64,    64,
    64,    64,    64,    64,    64,    64,    64,    64,   119,   119,
   119,   119,   119,   119,   119,   119,   119,   119,   118,   118,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   116,   116,   nil,
   nil,   118,   118,   118,   118,   118,   118,   118,   118,   118,
   116,   116,   116,   116,   116,   116,   116,   116,   115,   115,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   115,   115,   115,   115,   115,   115,   115 ]

racc_action_pointer = [
    55,   287,   nil,    24,   276,   253,   222,   266,   253,   111,
   149,   nil,   nil,   nil,   nil,   221,    91,   192,  1016,  1011,
   997,   978,   184,   969,    -4,   nil,   196,   nil,   186,   203,
   385,   nil,   nil,    79,   155,   nil,   nil,   781,   762,   173,
   nil,   169,   -14,  1145,   nil,   nil,   nil,   nil,   nil,  1025,
  1030,   964,   nil,   570,   535,   176,   719,   189,    -5,   nil,
   284,   185,   nil,    62,  1300,   nil,   150,  1121,   nil,   809,
   nil,   823,   828,   837,   842,   856,   870,   875,   884,  1105,
   903,   917,   922,   931,   936,   950,   nil,   nil,  1276,   297,
   270,   983,   399,   152,   144,     4,   124,   169,   137,   nil,
  1063,   nil,   nil,  1072,   nil,    27,   599,   nil,   124,   102,
    95,    58,  1180,  1204,   630,  1364,  1343,   564,  1334,  1311,
   nil,    24,   153,   665,   152,   nil,    -2,   348,   107,    95,
    80,   nil,  1228,   nil,    42,   312,    10,   744,    -8,   326,
    48,     6,   134,    47,   nil,   nil,   nil,   nil,   149,  1091,
    55,   186,   741,   889,    -5,   776,    72,    97,   nil,   nil,
   nil,   121,   nil,   428,   nil,   145,   145,   121,   nil,  1077,
   nil,  1252,   157,   253,   163,   605,   454,   156,   692,   217,
   nil,   -30,   234,   790,   156,   117,   nil,  1169,   nil,    60,
   191,   169,    38,    97,   795,   368,   207,   nil,   208,   399,
   nil,   217,   nil,   221,   194,   nil,    12,   228,   635,   232,
   208,   210,   203,   216,   217,   nil,   220,   166,   224,  1044,
   228,   nil,   nil,   257,   nil,   nil,   nil,   258,   nil,   483,
   nil,   239,   240,    80,  1058,   nil,   nil,   274,   509,   252,
     9,   nil,   286,   260,   nil ]

racc_action_default = [
   -87,   -87,    -1,   -87,    -4,    -8,   -87,   -87,   -87,   -87,
   -20,   -23,   -24,   -25,   -26,   -87,   -87,   -87,   -87,   -87,
   -87,   -87,   -87,   -87,   -87,    -7,   -87,   245,   -87,   -87,
   -87,   -15,   -16,   -18,   -87,   -19,   -27,   -87,   -87,   -87,
   -42,   -66,   -87,   -60,   -61,   -64,   -65,   -67,   -68,   -87,
   -87,   -87,   -43,   -87,   -87,   -87,   -87,   -87,   -87,    -2,
   -87,   -87,   -17,   -87,   -87,   -56,   -87,   -63,   -41,   -87,
   -59,   -87,   -87,   -87,   -87,   -87,   -87,   -87,   -87,   -87,
   -87,   -87,   -87,   -87,   -87,   -87,   -69,   -70,   -87,   -87,
   -87,   -87,   -87,   -87,   -87,   -87,   -87,   -87,   -87,   -39,
   -87,   -28,   -57,   -87,   -58,   -72,   -73,   -74,   -75,   -76,
   -77,   -78,   -79,   -80,   -81,   -82,   -83,   -84,   -85,   -86,
   -71,   -87,   -87,   -87,   -87,    -3,   -87,   -87,   -87,   -14,
   -87,    -6,   -87,   -62,   -87,   -87,   -87,   -87,   -87,   -87,
   -87,   -87,   -22,   -87,   -30,   -31,   -32,   -33,   -87,   -87,
   -87,   -87,   -87,   -87,   -87,   -87,   -87,   -87,    -5,   -40,
   -44,   -87,   -48,   -87,   -51,   -87,   -87,   -87,   -21,   -87,
   -34,   -87,   -87,   -87,   -87,   -87,   -87,   -87,   -87,   -87,
   -13,   -87,   -87,   -87,   -87,   -87,   -11,   -87,   -35,   -87,
   -87,   -87,   -87,   -87,   -87,   -87,   -87,   -45,   -87,   -87,
    -9,   -87,   -29,   -87,   -87,   -37,   -87,   -87,   -87,   -87,
   -87,   -87,   -87,   -87,   -87,   -38,   -87,   -87,   -87,   -87,
   -87,   -12,   -49,   -87,   -10,   -36,   -46,   -87,   -52,   -87,
   -55,   -87,   -87,   -87,   -87,   -50,   -47,   -87,   -87,   -87,
   -87,   -53,   -87,   -87,   -54 ]

racc_goto_table = [
    15,    29,    94,    40,    52,     4,     2,    15,    96,     1,
    25,    53,    54,   nil,    56,   nil,    66,   nil,   nil,   nil,
   nil,    15,   nil,    12,   nil,    62,   nil,    15,    64,    67,
    12,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    86,    87,    88,   nil,    12,   nil,   nil,   nil,   nil,   nil,
    12,   nil,   nil,   nil,   104,   nil,   nil,    15,   nil,   nil,
   nil,   nil,   105,   106,   107,   108,   109,   110,   111,   112,
   113,   114,   115,   116,   117,   118,   119,   nil,   156,   nil,
    12,   133,   123,   nil,   nil,   nil,    15,    15,   nil,    15,
   166,   132,   nil,   nil,    67,   nil,   nil,   nil,   nil,   nil,
   nil,   180,   nil,   nil,   nil,   nil,   nil,    96,     8,    12,
    12,   nil,    12,   nil,   nil,    35,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   148,   nil,   nil,   nil,   163,    57,
   nil,   nil,    15,   nil,   nil,    61,   148,   nil,   nil,   148,
   171,   nil,   172,   175,   176,   nil,   178,   nil,   148,   nil,
   nil,   nil,   nil,   nil,   141,    12,   nil,   nil,   nil,   nil,
   187,   nil,   nil,   nil,   nil,    97,   165,   nil,   nil,   168,
   148,   nil,   nil,   nil,   199,   nil,   148,   nil,   174,    15,
   nil,   nil,   148,   nil,   nil,   208,   148,   nil,   nil,   148,
   148,   nil,   148,   nil,   121,   122,   nil,   124,   nil,   nil,
   190,   nil,    12,   nil,   nil,   nil,   196,   nil,   nil,    15,
   229,   nil,   201,   nil,   148,   nil,   203,   nil,   nil,   206,
   207,   nil,   209,   nil,   nil,   238,   nil,   nil,   nil,   nil,
   148,   nil,    12,   nil,   nil,   nil,   nil,   148,   nil,   nil,
   161,   nil,   nil,   nil,   227,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   237,   nil,   nil,   nil,   nil,   nil,   nil,   242,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   198,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   223 ]

racc_goto_check = [
    17,     6,     8,    22,    22,     4,     2,    17,    10,     1,
     4,    18,    18,   nil,    18,   nil,    23,   nil,   nil,   nil,
   nil,    17,   nil,    14,   nil,     6,   nil,    17,    18,    18,
    14,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    18,    18,    18,   nil,    14,   nil,   nil,   nil,   nil,   nil,
    14,   nil,   nil,   nil,    22,   nil,   nil,    17,   nil,   nil,
   nil,   nil,    18,    18,    18,    18,    18,    18,    18,    18,
    18,    18,    18,    18,    18,    18,    18,   nil,    10,   nil,
    14,    23,    18,   nil,   nil,   nil,    17,    17,   nil,    17,
    10,    18,   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,
   nil,     8,   nil,   nil,   nil,   nil,   nil,    10,     3,    14,
    14,   nil,    14,   nil,   nil,     3,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    17,   nil,   nil,   nil,    18,     3,
   nil,   nil,    17,   nil,   nil,     3,    17,   nil,   nil,    17,
    18,   nil,     6,    18,    18,   nil,    18,   nil,    17,   nil,
   nil,   nil,   nil,   nil,     9,    14,   nil,   nil,   nil,   nil,
    18,   nil,   nil,   nil,   nil,     3,     9,   nil,   nil,     9,
    17,   nil,   nil,   nil,    18,   nil,    17,   nil,     9,    17,
   nil,   nil,    17,   nil,   nil,    18,    17,   nil,   nil,    17,
    17,   nil,    17,   nil,     3,     3,   nil,     3,   nil,   nil,
     9,   nil,    14,   nil,   nil,   nil,     9,   nil,   nil,    17,
    18,   nil,     9,   nil,    17,   nil,     9,   nil,   nil,     9,
     9,   nil,     9,   nil,   nil,    18,   nil,   nil,   nil,   nil,
    17,   nil,    14,   nil,   nil,   nil,   nil,    17,   nil,   nil,
     3,   nil,   nil,   nil,     9,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     9,   nil,   nil,   nil,   nil,   nil,   nil,     9,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3 ]

racc_goto_pointer = [
   nil,     9,     6,   105,     5,   nil,    -8,   nil,   -56,    27,
   -50,   nil,   nil,   nil,    20,   nil,   nil,    -3,    -9,   nil,
   nil,   nil,   -15,   -22,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,    11,   nil,     5,   nil,   nil,
    34,    33,    10,   142,   145,    13,    14,    45,    43,   144,
   146,   147,   nil,   nil,    42 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 53, :_reduce_none,
  4, 54, :_reduce_2,
  5, 54, :_reduce_3,
  1, 54, :_reduce_4,
  6, 57, :_reduce_5,
  5, 57, :_reduce_6,
  2, 56, :_reduce_7,
  1, 56, :_reduce_8,
  9, 59, :_reduce_9,
  11, 59, :_reduce_10,
  8, 59, :_reduce_11,
  10, 59, :_reduce_12,
  4, 60, :_reduce_13,
  2, 60, :_reduce_14,
  1, 62, :_reduce_15,
  1, 62, :_reduce_16,
  2, 58, :_reduce_17,
  1, 58, :_reduce_18,
  2, 55, :_reduce_19,
  1, 55, :_reduce_20,
  2, 61, :_reduce_21,
  1, 61, :_reduce_22,
  1, 64, :_reduce_23,
  1, 64, :_reduce_24,
  1, 64, :_reduce_25,
  1, 64, :_reduce_26,
  2, 64, :_reduce_27,
  4, 64, :_reduce_28,
  4, 65, :_reduce_29,
  1, 65, :_reduce_30,
  1, 65, :_reduce_31,
  1, 65, :_reduce_32,
  1, 65, :_reduce_33,
  2, 65, :_reduce_34,
  3, 65, :_reduce_35,
  6, 71, :_reduce_36,
  4, 71, :_reduce_37,
  5, 71, :_reduce_38,
  3, 63, :_reduce_39,
  5, 63, :_reduce_40,
  3, 66, :_reduce_41,
  2, 66, :_reduce_42,
  2, 66, :_reduce_43,
  6, 67, :_reduce_44,
  8, 67, :_reduce_45,
  6, 72, :_reduce_46,
  8, 72, :_reduce_47,
  6, 68, :_reduce_48,
  10, 68, :_reduce_49,
  12, 68, :_reduce_50,
  6, 68, :_reduce_51,
  6, 73, :_reduce_52,
  10, 73, :_reduce_53,
  12, 73, :_reduce_54,
  6, 73, :_reduce_55,
  3, 69, :_reduce_56,
  4, 69, :_reduce_57,
  3, 74, :_reduce_58,
  2, 74, :_reduce_59,
  1, 76, :_reduce_60,
  1, 76, :_reduce_61,
  3, 75, :_reduce_62,
  1, 75, :_reduce_63,
  1, 70, :_reduce_64,
  1, 70, :_reduce_65,
  1, 70, :_reduce_66,
  1, 70, :_reduce_67,
  1, 70, :_reduce_68,
  2, 70, :_reduce_69,
  2, 70, :_reduce_70,
  3, 70, :_reduce_71,
  3, 70, :_reduce_72,
  3, 70, :_reduce_73,
  3, 70, :_reduce_74,
  3, 70, :_reduce_75,
  3, 70, :_reduce_76,
  3, 70, :_reduce_77,
  3, 70, :_reduce_78,
  3, 70, :_reduce_79,
  3, 70, :_reduce_80,
  3, 70, :_reduce_81,
  3, 70, :_reduce_82,
  3, 70, :_reduce_83,
  3, 70, :_reduce_84,
  3, 70, :_reduce_85,
  3, 70, :_reduce_86 ]

racc_reduce_n = 87

racc_shift_n = 245

racc_token_table = {
  false => 0,
  :error => 1,
  Program => 2,
  End => 3,
  With => 4,
  Do => 5,
  Begin => 6,
  TipoBooleano => 7,
  TipoNumero => 8,
  Read => 9,
  Write => 10,
  Writeln => 11,
  If => 12,
  Then => 13,
  Else => 14,
  While => 15,
  For => 16,
  From => 17,
  To => 18,
  By => 19,
  Repeat => 20,
  Times => 21,
  Func => 22,
  Return => 23,
  Div => 24,
  Mod => 25,
  True => 26,
  False => 27,
  Not => 28,
  And => 29,
  Or => 30,
  PuntoYComa => 31,
  Asignacion => 32,
  FirmaFuncion => 33,
  ParentesisAbre => 34,
  ParentesisCierra => 35,
  Coma => 36,
  Mas => 37,
  Menos => 38,
  Por => 39,
  Entre => 40,
  Modulo => 41,
  IgualQue => 42,
  DiferenteA => 43,
  MayorIgualQue => 44,
  MenorIgualQue => 45,
  MayorQue => 46,
  MenorQue => 47,
  :UMINUS => 48,
  CadenaDeCaracteres => 49,
  Identificadores => 50,
  LiteralesNumericos => 51 }

racc_nt_base = 52

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"program\"",
  "\"end\"",
  "\"with\"",
  "\"do\"",
  "\"begin\"",
  "\"boolean\"",
  "\"number\"",
  "\"read\"",
  "\"write\"",
  "\"writeln\"",
  "\"if\"",
  "\"then\"",
  "\"else\"",
  "\"while\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"by\"",
  "\"repeat\"",
  "\"times\"",
  "\"func\"",
  "\"return\"",
  "\"div\"",
  "\"mod\"",
  "\"true\"",
  "\"false\"",
  "\"not\"",
  "\"and\"",
  "\"or\"",
  "\";\"",
  "\"=\"",
  "\"->\"",
  "\"(\"",
  "\")\"",
  "\",\"",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"==\"",
  "\"/=\"",
  "\">=\"",
  "\"<=\"",
  "\">\"",
  "\"<\"",
  "UMINUS",
  "\"String\"",
  "\"Ident\"",
  "\"Num\"",
  "$start",
  "Inicio",
  "Alcance",
  "Instruccion",
  "Funciones",
  "Bloque",
  "Declaracion",
  "Funcion",
  "Argumento",
  "InstruccionFun",
  "Tipo",
  "DeclaF",
  "InstrF",
  "InstrFun",
  "IO",
  "Condicional",
  "Iteracion",
  "Llamada",
  "Expresion",
  "BloqueFun",
  "CondicionalFun",
  "IteracionFun",
  "Salida",
  "ArgumLlamada",
  "SalF" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'Parser.y', 86)
  def _reduce_2(val, _values, result)
    result = Programa.new([], Instrucciones.new(val[1]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 87)
  def _reduce_3(val, _values, result)
    result = Programa.new(Funciones.new(val[0]), Instrucciones.new(val[2]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 88)
  def _reduce_4(val, _values, result)
    result = Programa.new(Funciones.new(val[0]), [])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 91)
  def _reduce_5(val, _values, result)
    result = Bloque.new(Declaraciones.new(val[1]), Instrucciones.new(val[3]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 92)
  def _reduce_6(val, _values, result)
    result = Bloque.new([], Instrucciones.new(val[2]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 95)
  def _reduce_7(val, _values, result)
    result = [val[0]] + val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 96)
  def _reduce_8(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 99)
  def _reduce_9(val, _values, result)
    result = Funcion.new(Identificador.new(val[1]), Argumentos.new(val[3]), Instrucciones.new(val[6]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 100)
  def _reduce_10(val, _values, result)
    result = FuncionConTipo.new(Identificador.new(val[1]), Argumentos.new(val[3]), val[6], Instrucciones.new(val[8]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 101)
  def _reduce_11(val, _values, result)
    result = Funcion.new(Identificador.new(val[1]), [], Instrucciones.new(val[5]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 102)
  def _reduce_12(val, _values, result)
    result = FuncionConTipo.new(Identificador.new(val[1]), [], val[5], Instrucciones.new(val[7]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 105)
  def _reduce_13(val, _values, result)
    result = [Argumento.new(val[0], Identificador.new(val[1]))] + val[3]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 106)
  def _reduce_14(val, _values, result)
    result = [Argumento.new(val[0], Identificador.new(val[1]))]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 109)
  def _reduce_15(val, _values, result)
    result = Tipo.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 110)
  def _reduce_16(val, _values, result)
    result = Tipo.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 113)
  def _reduce_17(val, _values, result)
    result = [val[0]] + val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 114)
  def _reduce_18(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 117)
  def _reduce_19(val, _values, result)
    result = [val[0]] + val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 118)
  def _reduce_20(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 121)
  def _reduce_21(val, _values, result)
    result = [val[0]] + val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 122)
  def _reduce_22(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 125)
  def _reduce_23(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 126)
  def _reduce_24(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 127)
  def _reduce_25(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 128)
  def _reduce_26(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 129)
  def _reduce_27(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 130)
  def _reduce_28(val, _values, result)
    result = AsignacionParser.new(Identificador.new(val[0]), val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 133)
  def _reduce_29(val, _values, result)
    result = AsignacionParser.new(Identificador.new(val[0]), val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 134)
  def _reduce_30(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 135)
  def _reduce_31(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 136)
  def _reduce_32(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 137)
  def _reduce_33(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 138)
  def _reduce_34(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 139)
  def _reduce_35(val, _values, result)
    result = Retorno.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 142)
  def _reduce_36(val, _values, result)
    result = Bloque.new(Declaraciones.new(val[1]), Instrucciones.new(val[3]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 143)
  def _reduce_37(val, _values, result)
    result = Bloque.new([], Instrucciones.new(val[1]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 144)
  def _reduce_38(val, _values, result)
    result = Bloque.new([], Instrucciones.new(val[2]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 147)
  def _reduce_39(val, _values, result)
    result = Declaracion.new(val[0], Identificador.new(val[1]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 148)
  def _reduce_40(val, _values, result)
    result = Declaracion.new(val[0], AsignacionParser.new(Identificador.new(val[1]), val[3]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 151)
  def _reduce_41(val, _values, result)
    result = Entrada.new(Identificador.new(val[1]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 152)
  def _reduce_42(val, _values, result)
    result = Salidas.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 153)
  def _reduce_43(val, _values, result)
    result = SalidasConSalto.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 156)
  def _reduce_44(val, _values, result)
    result = CondIf.new(val[1], Instrucciones.new(val[3]), val[0].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 157)
  def _reduce_45(val, _values, result)
    result = CondIfElse.new(val[1], Instrucciones.new(val[3]), Instrucciones.new(val[5]), val[0].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 160)
  def _reduce_46(val, _values, result)
    result = CondIf.new(val[1], Instrucciones.new(val[3]), val[0].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 161)
  def _reduce_47(val, _values, result)
    result = CondIfElse.new(val[1], Instrucciones.new(val[3]), Instrucciones.new(val[5]), val[0].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 164)
  def _reduce_48(val, _values, result)
    result = IterWhile.new(val[1], Instrucciones.new(val[3]), val[0].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 165)
  def _reduce_49(val, _values, result)
    result = IterFor.new(Identificador.new(val[1]), val[3], val[5], Instrucciones.new(val[7]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 166)
  def _reduce_50(val, _values, result)
    result = IterForBy.new(Identificador.new(val[1]), val[3], val[5], val[7], Instrucciones.new(val[9]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 167)
  def _reduce_51(val, _values, result)
    result = IterRepeat.new(val[1], Instrucciones.new(val[3]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 170)
  def _reduce_52(val, _values, result)
    result = IterWhile.new(val[1], Instrucciones.new(val[3]), val[0].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 171)
  def _reduce_53(val, _values, result)
    result = IterFor.new(Identificador.new(val[1]), val[3], val[5], Instrucciones.new(val[7]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 172)
  def _reduce_54(val, _values, result)
    result = IterForBy.new(Identificador.new(val[1]), val[3], val[5], val[7], Instrucciones.new(val[9]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 173)
  def _reduce_55(val, _values, result)
    result = IterRepeat.new(val[1], Instrucciones.new(val[3]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 176)
  def _reduce_56(val, _values, result)
    result = Llamada.new(Identificador.new(val[0]), [])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 177)
  def _reduce_57(val, _values, result)
    result = Llamada.new(Identificador.new(val[0]), Argumentos.new(val[2]))
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 180)
  def _reduce_58(val, _values, result)
    result = [val[0]] + val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 181)
  def _reduce_59(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 184)
  def _reduce_60(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 185)
  def _reduce_61(val, _values, result)
    result = CadenaDeCaracteresParser.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 188)
  def _reduce_62(val, _values, result)
    result = [val[0]] + val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 189)
  def _reduce_63(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 192)
  def _reduce_64(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 193)
  def _reduce_65(val, _values, result)
    result = Numero.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 194)
  def _reduce_66(val, _values, result)
    result = Identificador.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 195)
  def _reduce_67(val, _values, result)
    result = Booleano.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 196)
  def _reduce_68(val, _values, result)
    result = Booleano.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 197)
  def _reduce_69(val, _values, result)
    result = Minus.new(val[1], val[0].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 198)
  def _reduce_70(val, _values, result)
    result = Negacion.new(val[1], val[0].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 199)
  def _reduce_71(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 200)
  def _reduce_72(val, _values, result)
    result = Suma.new(val[0], val[2], val[1].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 201)
  def _reduce_73(val, _values, result)
    result = Resta.new(val[0], val[2], val[1].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 202)
  def _reduce_74(val, _values, result)
    result = Multiplicacion.new(val[0], val[2], val[1].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 203)
  def _reduce_75(val, _values, result)
    result = Division.new(val[0], val[2], val[1].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 204)
  def _reduce_76(val, _values, result)
    result = Resto.new(val[0], val[2], val[1].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 205)
  def _reduce_77(val, _values, result)
    result = DivisionEntera.new(val[0], val[2], val[1].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 206)
  def _reduce_78(val, _values, result)
    result = RestoEntero.new(val[0], val[2], val[1].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 207)
  def _reduce_79(val, _values, result)
    result = Conjuncion.new(val[0], val[2], val[1].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 208)
  def _reduce_80(val, _values, result)
    result = Disyuncion.new(val[0], val[2], val[1].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 209)
  def _reduce_81(val, _values, result)
    result = IgualQueParser.new(val[0], val[2], val[1].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 210)
  def _reduce_82(val, _values, result)
    result = MayorIgualQueParser.new(val[0], val[2], val[1].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 211)
  def _reduce_83(val, _values, result)
    result = MenorIgualQueParser.new(val[0], val[2], val[1].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 212)
  def _reduce_84(val, _values, result)
    result = DiferenteAParser.new(val[0], val[2], val[1].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 213)
  def _reduce_85(val, _values, result)
    result = MayorQueParser.new(val[0], val[2], val[1].line)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 214)
  def _reduce_86(val, _values, result)
    result = MenorQueParser.new(val[0], val[2], val[1].line)
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser


